{"version":3,"sources":["js/task-01.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":";AAKA,IAAMA,EAAQ,SAAAC,GACL,OAAA,IAAIC,QAAQ,SAAAC,GACjBC,WAAW,WACTD,EAAQF,IACPA,MAIDI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QACnBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ","file":"task-01.e9226887.js","sourceRoot":"..\\src","sourcesContent":["/*\r\nНапиши функцию delay(ms), которая возвращает промис, переходящий в состояние \r\n\"resolved\" через ms миллисекунд. Значением исполнившегося промиса должно быть то \r\nкол-во миллисекунд которое передали во время вызова функции delay.\r\n */\r\nconst delay = ms => {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(ms);\r\n    }, ms);\r\n  });\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\ndelay(2000).then(logger); \r\ndelay(1000).then(logger); \r\ndelay(1500).then(logger); "]}